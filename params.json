{"name":"Pyriodic","tagline":"A Python task scheduler","body":"#Pyriodic\r\n\r\n_Pronounced just like \"periodic\"_\r\n\r\nA job scheduler written in Python to run periodic tasks.\r\n\r\nThis project is in the alpha stage so there is a lot yet to do.\r\n\r\n---\r\n\r\n##Installation\r\n\r\n```\r\npip install pyriodic\r\n```\r\n\r\n---\r\n\r\n##Dependencies\r\n\r\nPyriodic can be installed and used on it's own but if tasks need to be scheduled at a specific date/time then the module dateutil is invaluble. Without it acceptable datetime strings are rather limited.\r\n\r\nIf dateutil is already installed then it will be used automatically.\r\n\r\n---\r\n\r\n##Usage\r\n\r\n```python\r\nfrom pyriodic import DurationJob\r\nfrom pyriodic import DatetimeJob\r\nfrom pyriodic import Scheduler\r\n\r\nnow = datetime.now\r\ns = Scheduler()\r\n\r\nstart = now()\r\n\r\ndef func1(arg1=None, arg2=None, arg3=None, arg4=None):\r\n\tprint('Func1', arg1, arg2, arg3, arg4, now() - start, datetime.now())\r\n\r\ndef func2():\r\n\tprint('Func2', datetime.now() - start, now())\r\n\r\ndef func3():\r\n\tprint('Func3', datetime.now() - start, now())\r\n\r\ns.add_job(DurationJob(func1,\r\n                    when='30m',\r\n                    args=('This', 'is'),\r\n                    kwargs={'arg3': 'the', 'arg4': 'first function'},\r\n                    name='MyJob'))\r\ns.add_job(DurationJob(func2, when='2h'))\r\ns.add_job(DatetimeJob(func3, when='12:00 pm'))\r\n\r\nprint(s.next_run_times())\r\n```\r\n\r\n\r\n---\r\n\r\n##Todo\r\n\r\n- [ ] Add timezone awareness\r\n- [ ] Add tests\r\n- [ ] Add docstrings\r\n- [ ] Add ability to schedule jobs with decorators\r\n- [ ] Add options for error handling\r\n  - [ ] Add option for a waiting time before the next function call after an exception\r\n  - [ ] Add option for the number of retrys after exceptions\r\n  - [ ] Add the option to execute a different function upon an exception\r\n- [ ] A web front end; probably with CherryPy\r\n  - [ ] Be able to see the scheduled jobs\r\n  - [ ] Control jobs; pause, remove, reschedule\r\n- [ ] Expand the abilities of the custom datetime string parser in case dateutil cannot be used\r\n- [x] Add stop and start methods to scheduler\r\n- [x] Add some kind of logging for executed tasks","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}